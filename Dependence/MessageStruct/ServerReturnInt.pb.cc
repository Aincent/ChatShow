// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerReturnInt.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerReturnInt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ServerReturn {

namespace {

const ::google::protobuf::Descriptor* ServerRetInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRetInt_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerRetIntArray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRetIntArray_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerRetInt32Array_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRetInt32Array_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerDoubleIntArray_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerDoubleIntArray_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerResultInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerResultInt_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerReturnInt_2eproto() {
  protobuf_AddDesc_ServerReturnInt_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerReturnInt.proto");
  GOOGLE_CHECK(file != NULL);
  ServerRetInt_descriptor_ = file->message_type(0);
  static const int ServerRetInt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt, ret_),
  };
  ServerRetInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRetInt_descriptor_,
      ServerRetInt::default_instance_,
      ServerRetInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRetInt));
  ServerRetIntArray_descriptor_ = file->message_type(1);
  static const int ServerRetIntArray_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntArray, ret_),
  };
  ServerRetIntArray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRetIntArray_descriptor_,
      ServerRetIntArray::default_instance_,
      ServerRetIntArray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntArray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntArray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRetIntArray));
  ServerRetInt32Array_descriptor_ = file->message_type(2);
  static const int ServerRetInt32Array_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt32Array, ret_),
  };
  ServerRetInt32Array_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRetInt32Array_descriptor_,
      ServerRetInt32Array::default_instance_,
      ServerRetInt32Array_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt32Array, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetInt32Array, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRetInt32Array));
  ServerDoubleIntArray_descriptor_ = file->message_type(3);
  static const int ServerDoubleIntArray_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntArray, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntArray, rets_),
  };
  ServerDoubleIntArray_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerDoubleIntArray_descriptor_,
      ServerDoubleIntArray::default_instance_,
      ServerDoubleIntArray_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntArray, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntArray, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerDoubleIntArray));
  ServerResultInt_descriptor_ = file->message_type(4);
  static const int ServerResultInt_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResultInt, ret_),
  };
  ServerResultInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerResultInt_descriptor_,
      ServerResultInt::default_instance_,
      ServerResultInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResultInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerResultInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerResultInt));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerReturnInt_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRetInt_descriptor_, &ServerRetInt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRetIntArray_descriptor_, &ServerRetIntArray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRetInt32Array_descriptor_, &ServerRetInt32Array::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerDoubleIntArray_descriptor_, &ServerDoubleIntArray::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerResultInt_descriptor_, &ServerResultInt::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ServerReturnInt_2eproto() {
  delete ServerRetInt::default_instance_;
  delete ServerRetInt_reflection_;
  delete ServerRetIntArray::default_instance_;
  delete ServerRetIntArray_reflection_;
  delete ServerRetInt32Array::default_instance_;
  delete ServerRetInt32Array_reflection_;
  delete ServerDoubleIntArray::default_instance_;
  delete ServerDoubleIntArray_reflection_;
  delete ServerResultInt::default_instance_;
  delete ServerResultInt_reflection_;
}

void protobuf_AddDesc_ServerReturnInt_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025ServerReturnInt.proto\022\014ServerReturn\"\033\n"
    "\014ServerRetInt\022\013\n\003ret\030\001 \002(\003\" \n\021ServerRetI"
    "ntArray\022\013\n\003ret\030\001 \003(\003\"\"\n\023ServerRetInt32Ar"
    "ray\022\013\n\003ret\030\001 \003(\005\"2\n\024ServerDoubleIntArray"
    "\022\014\n\004retf\030\001 \002(\003\022\014\n\004rets\030\002 \003(\003\"\036\n\017ServerRe"
    "sultInt\022\013\n\003ret\030\001 \002(\005", 220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerReturnInt.proto", &protobuf_RegisterTypes);
  ServerRetInt::default_instance_ = new ServerRetInt();
  ServerRetIntArray::default_instance_ = new ServerRetIntArray();
  ServerRetInt32Array::default_instance_ = new ServerRetInt32Array();
  ServerDoubleIntArray::default_instance_ = new ServerDoubleIntArray();
  ServerResultInt::default_instance_ = new ServerResultInt();
  ServerRetInt::default_instance_->InitAsDefaultInstance();
  ServerRetIntArray::default_instance_->InitAsDefaultInstance();
  ServerRetInt32Array::default_instance_->InitAsDefaultInstance();
  ServerDoubleIntArray::default_instance_->InitAsDefaultInstance();
  ServerResultInt::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerReturnInt_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerReturnInt_2eproto {
  StaticDescriptorInitializer_ServerReturnInt_2eproto() {
    protobuf_AddDesc_ServerReturnInt_2eproto();
  }
} static_descriptor_initializer_ServerReturnInt_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ServerRetInt::kRetFieldNumber;
#endif  // !_MSC_VER

ServerRetInt::ServerRetInt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerRetInt)
}

void ServerRetInt::InitAsDefaultInstance() {
}

ServerRetInt::ServerRetInt(const ServerRetInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerRetInt)
}

void ServerRetInt::SharedCtor() {
  _cached_size_ = 0;
  ret_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRetInt::~ServerRetInt() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerRetInt)
  SharedDtor();
}

void ServerRetInt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerRetInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRetInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRetInt_descriptor_;
}

const ServerRetInt& ServerRetInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnInt_2eproto();
  return *default_instance_;
}

ServerRetInt* ServerRetInt::default_instance_ = NULL;

ServerRetInt* ServerRetInt::New() const {
  return new ServerRetInt;
}

void ServerRetInt::Clear() {
  ret_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerRetInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerRetInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerRetInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerRetInt)
  return false;
#undef DO_
}

void ServerRetInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerRetInt)
  // required int64 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerRetInt)
}

::google::protobuf::uint8* ServerRetInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerRetInt)
  // required int64 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerRetInt)
  return target;
}

int ServerRetInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRetInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerRetInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerRetInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerRetInt::MergeFrom(const ServerRetInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerRetInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetInt::CopyFrom(const ServerRetInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ServerRetInt::Swap(ServerRetInt* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerRetInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRetInt_descriptor_;
  metadata.reflection = ServerRetInt_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerRetIntArray::kRetFieldNumber;
#endif  // !_MSC_VER

ServerRetIntArray::ServerRetIntArray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerRetIntArray)
}

void ServerRetIntArray::InitAsDefaultInstance() {
}

ServerRetIntArray::ServerRetIntArray(const ServerRetIntArray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerRetIntArray)
}

void ServerRetIntArray::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRetIntArray::~ServerRetIntArray() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerRetIntArray)
  SharedDtor();
}

void ServerRetIntArray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerRetIntArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRetIntArray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRetIntArray_descriptor_;
}

const ServerRetIntArray& ServerRetIntArray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnInt_2eproto();
  return *default_instance_;
}

ServerRetIntArray* ServerRetIntArray::default_instance_ = NULL;

ServerRetIntArray* ServerRetIntArray::New() const {
  return new ServerRetIntArray;
}

void ServerRetIntArray::Clear() {
  ret_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerRetIntArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerRetIntArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 ret = 1;
      case 1: {
        if (tag == 8) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_ret())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ret())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ret;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerRetIntArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerRetIntArray)
  return false;
#undef DO_
}

void ServerRetIntArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerRetIntArray)
  // repeated int64 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->ret(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerRetIntArray)
}

::google::protobuf::uint8* ServerRetIntArray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerRetIntArray)
  // repeated int64 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->ret(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerRetIntArray)
  return target;
}

int ServerRetIntArray::ByteSize() const {
  int total_size = 0;

  // repeated int64 ret = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ret_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ret(i));
    }
    total_size += 1 * this->ret_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRetIntArray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerRetIntArray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerRetIntArray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerRetIntArray::MergeFrom(const ServerRetIntArray& from) {
  GOOGLE_CHECK_NE(&from, this);
  ret_.MergeFrom(from.ret_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerRetIntArray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetIntArray::CopyFrom(const ServerRetIntArray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetIntArray::IsInitialized() const {

  return true;
}

void ServerRetIntArray::Swap(ServerRetIntArray* other) {
  if (other != this) {
    ret_.Swap(&other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerRetIntArray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRetIntArray_descriptor_;
  metadata.reflection = ServerRetIntArray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerRetInt32Array::kRetFieldNumber;
#endif  // !_MSC_VER

ServerRetInt32Array::ServerRetInt32Array()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerRetInt32Array)
}

void ServerRetInt32Array::InitAsDefaultInstance() {
}

ServerRetInt32Array::ServerRetInt32Array(const ServerRetInt32Array& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerRetInt32Array)
}

void ServerRetInt32Array::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRetInt32Array::~ServerRetInt32Array() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerRetInt32Array)
  SharedDtor();
}

void ServerRetInt32Array::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerRetInt32Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRetInt32Array::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRetInt32Array_descriptor_;
}

const ServerRetInt32Array& ServerRetInt32Array::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnInt_2eproto();
  return *default_instance_;
}

ServerRetInt32Array* ServerRetInt32Array::default_instance_ = NULL;

ServerRetInt32Array* ServerRetInt32Array::New() const {
  return new ServerRetInt32Array;
}

void ServerRetInt32Array::Clear() {
  ret_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerRetInt32Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerRetInt32Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 ret = 1;
      case 1: {
        if (tag == 8) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_ret())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ret())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_ret;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerRetInt32Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerRetInt32Array)
  return false;
#undef DO_
}

void ServerRetInt32Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerRetInt32Array)
  // repeated int32 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->ret(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerRetInt32Array)
}

::google::protobuf::uint8* ServerRetInt32Array::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerRetInt32Array)
  // repeated int32 ret = 1;
  for (int i = 0; i < this->ret_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->ret(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerRetInt32Array)
  return target;
}

int ServerRetInt32Array::ByteSize() const {
  int total_size = 0;

  // repeated int32 ret = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->ret_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->ret(i));
    }
    total_size += 1 * this->ret_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRetInt32Array::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerRetInt32Array* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerRetInt32Array*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerRetInt32Array::MergeFrom(const ServerRetInt32Array& from) {
  GOOGLE_CHECK_NE(&from, this);
  ret_.MergeFrom(from.ret_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerRetInt32Array::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetInt32Array::CopyFrom(const ServerRetInt32Array& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetInt32Array::IsInitialized() const {

  return true;
}

void ServerRetInt32Array::Swap(ServerRetInt32Array* other) {
  if (other != this) {
    ret_.Swap(&other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerRetInt32Array::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRetInt32Array_descriptor_;
  metadata.reflection = ServerRetInt32Array_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerDoubleIntArray::kRetfFieldNumber;
const int ServerDoubleIntArray::kRetsFieldNumber;
#endif  // !_MSC_VER

ServerDoubleIntArray::ServerDoubleIntArray()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerDoubleIntArray)
}

void ServerDoubleIntArray::InitAsDefaultInstance() {
}

ServerDoubleIntArray::ServerDoubleIntArray(const ServerDoubleIntArray& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerDoubleIntArray)
}

void ServerDoubleIntArray::SharedCtor() {
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerDoubleIntArray::~ServerDoubleIntArray() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerDoubleIntArray)
  SharedDtor();
}

void ServerDoubleIntArray::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerDoubleIntArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDoubleIntArray::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerDoubleIntArray_descriptor_;
}

const ServerDoubleIntArray& ServerDoubleIntArray::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnInt_2eproto();
  return *default_instance_;
}

ServerDoubleIntArray* ServerDoubleIntArray::default_instance_ = NULL;

ServerDoubleIntArray* ServerDoubleIntArray::New() const {
  return new ServerDoubleIntArray;
}

void ServerDoubleIntArray::Clear() {
  retf_ = GOOGLE_LONGLONG(0);
  rets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerDoubleIntArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerDoubleIntArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // repeated int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_rets())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rets())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerDoubleIntArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerDoubleIntArray)
  return false;
#undef DO_
}

void ServerDoubleIntArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerDoubleIntArray)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // repeated int64 rets = 2;
  for (int i = 0; i < this->rets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->rets(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerDoubleIntArray)
}

::google::protobuf::uint8* ServerDoubleIntArray::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerDoubleIntArray)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // repeated int64 rets = 2;
  for (int i = 0; i < this->rets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->rets(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerDoubleIntArray)
  return target;
}

int ServerDoubleIntArray::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

  }
  // repeated int64 rets = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->rets_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->rets(i));
    }
    total_size += 1 * this->rets_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDoubleIntArray::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerDoubleIntArray* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerDoubleIntArray*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerDoubleIntArray::MergeFrom(const ServerDoubleIntArray& from) {
  GOOGLE_CHECK_NE(&from, this);
  rets_.MergeFrom(from.rets_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerDoubleIntArray::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDoubleIntArray::CopyFrom(const ServerDoubleIntArray& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDoubleIntArray::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ServerDoubleIntArray::Swap(ServerDoubleIntArray* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    rets_.Swap(&other->rets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerDoubleIntArray::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerDoubleIntArray_descriptor_;
  metadata.reflection = ServerDoubleIntArray_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerResultInt::kRetFieldNumber;
#endif  // !_MSC_VER

ServerResultInt::ServerResultInt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerResultInt)
}

void ServerResultInt::InitAsDefaultInstance() {
}

ServerResultInt::ServerResultInt(const ServerResultInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerResultInt)
}

void ServerResultInt::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerResultInt::~ServerResultInt() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerResultInt)
  SharedDtor();
}

void ServerResultInt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerResultInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerResultInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerResultInt_descriptor_;
}

const ServerResultInt& ServerResultInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnInt_2eproto();
  return *default_instance_;
}

ServerResultInt* ServerResultInt::default_instance_ = NULL;

ServerResultInt* ServerResultInt::New() const {
  return new ServerResultInt;
}

void ServerResultInt::Clear() {
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerResultInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerResultInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerResultInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerResultInt)
  return false;
#undef DO_
}

void ServerResultInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerResultInt)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerResultInt)
}

::google::protobuf::uint8* ServerResultInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerResultInt)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerResultInt)
  return target;
}

int ServerResultInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerResultInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerResultInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerResultInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerResultInt::MergeFrom(const ServerResultInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerResultInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerResultInt::CopyFrom(const ServerResultInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerResultInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ServerResultInt::Swap(ServerResultInt* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerResultInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerResultInt_descriptor_;
  metadata.reflection = ServerResultInt_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerReturn

// @@protoc_insertion_point(global_scope)
