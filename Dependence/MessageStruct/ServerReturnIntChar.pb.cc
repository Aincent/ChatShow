// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerReturnIntChar.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ServerReturnIntChar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ServerReturn {

namespace {

const ::google::protobuf::Descriptor* ServerRetIntChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerRetIntChar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerDoubleIntChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerDoubleIntChar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerDoubleIntTwoChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerDoubleIntTwoChar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerThreeIntChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerThreeIntChar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerFourIntChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerFourIntChar_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerThreeIntTwoChar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerThreeIntTwoChar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ServerReturnIntChar_2eproto() {
  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ServerReturnIntChar.proto");
  GOOGLE_CHECK(file != NULL);
  ServerRetIntChar_descriptor_ = file->message_type(0);
  static const int ServerRetIntChar_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntChar, rets_),
  };
  ServerRetIntChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerRetIntChar_descriptor_,
      ServerRetIntChar::default_instance_,
      ServerRetIntChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRetIntChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerRetIntChar));
  ServerDoubleIntChar_descriptor_ = file->message_type(1);
  static const int ServerDoubleIntChar_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntChar, rets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntChar, rett_),
  };
  ServerDoubleIntChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerDoubleIntChar_descriptor_,
      ServerDoubleIntChar::default_instance_,
      ServerDoubleIntChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerDoubleIntChar));
  ServerDoubleIntTwoChar_descriptor_ = file->message_type(2);
  static const int ServerDoubleIntTwoChar_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, rets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, rett_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, reft_),
  };
  ServerDoubleIntTwoChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerDoubleIntTwoChar_descriptor_,
      ServerDoubleIntTwoChar::default_instance_,
      ServerDoubleIntTwoChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDoubleIntTwoChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerDoubleIntTwoChar));
  ServerThreeIntChar_descriptor_ = file->message_type(3);
  static const int ServerThreeIntChar_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, rets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, rett_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, retfo_),
  };
  ServerThreeIntChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerThreeIntChar_descriptor_,
      ServerThreeIntChar::default_instance_,
      ServerThreeIntChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerThreeIntChar));
  ServerFourIntChar_descriptor_ = file->message_type(4);
  static const int ServerFourIntChar_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, rets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, rett_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, retfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, retfi_),
  };
  ServerFourIntChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerFourIntChar_descriptor_,
      ServerFourIntChar::default_instance_,
      ServerFourIntChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFourIntChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerFourIntChar));
  ServerThreeIntTwoChar_descriptor_ = file->message_type(5);
  static const int ServerThreeIntTwoChar_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, rets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, rett_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, retf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, retfi_),
  };
  ServerThreeIntTwoChar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServerThreeIntTwoChar_descriptor_,
      ServerThreeIntTwoChar::default_instance_,
      ServerThreeIntTwoChar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerThreeIntTwoChar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServerThreeIntTwoChar));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ServerReturnIntChar_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerRetIntChar_descriptor_, &ServerRetIntChar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerDoubleIntChar_descriptor_, &ServerDoubleIntChar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerDoubleIntTwoChar_descriptor_, &ServerDoubleIntTwoChar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerThreeIntChar_descriptor_, &ServerThreeIntChar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerFourIntChar_descriptor_, &ServerFourIntChar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServerThreeIntTwoChar_descriptor_, &ServerThreeIntTwoChar::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ServerReturnIntChar_2eproto() {
  delete ServerRetIntChar::default_instance_;
  delete ServerRetIntChar_reflection_;
  delete ServerDoubleIntChar::default_instance_;
  delete ServerDoubleIntChar_reflection_;
  delete ServerDoubleIntTwoChar::default_instance_;
  delete ServerDoubleIntTwoChar_reflection_;
  delete ServerThreeIntChar::default_instance_;
  delete ServerThreeIntChar_reflection_;
  delete ServerFourIntChar::default_instance_;
  delete ServerFourIntChar_reflection_;
  delete ServerThreeIntTwoChar::default_instance_;
  delete ServerThreeIntTwoChar_reflection_;
}

void protobuf_AddDesc_ServerReturnIntChar_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031ServerReturnIntChar.proto\022\014ServerRetur"
    "n\".\n\020ServerRetIntChar\022\014\n\004retf\030\001 \002(\003\022\014\n\004r"
    "ets\030\002 \002(\t\"\?\n\023ServerDoubleIntChar\022\014\n\004retf"
    "\030\001 \002(\003\022\014\n\004rets\030\002 \002(\003\022\014\n\004rett\030\003 \002(\t\"P\n\026Se"
    "rverDoubleIntTwoChar\022\014\n\004retf\030\001 \002(\003\022\014\n\004re"
    "ts\030\002 \002(\003\022\014\n\004rett\030\003 \002(\t\022\014\n\004reft\030\004 \002(\t\"M\n\022"
    "ServerThreeIntChar\022\014\n\004retf\030\001 \002(\003\022\014\n\004rets"
    "\030\002 \002(\003\022\014\n\004rett\030\003 \002(\003\022\r\n\005retfo\030\004 \002(\t\"[\n\021S"
    "erverFourIntChar\022\014\n\004retf\030\001 \002(\003\022\014\n\004rets\030\002"
    " \002(\003\022\014\n\004rett\030\003 \002(\003\022\r\n\005retfo\030\004 \002(\003\022\r\n\005ret"
    "fi\030\005 \002(\t\"^\n\025ServerThreeIntTwoChar\022\014\n\004cod"
    "e\030\001 \002(\003\022\014\n\004rets\030\002 \001(\003\022\014\n\004rett\030\003 \001(\003\022\014\n\004r"
    "etf\030\004 \001(\t\022\r\n\005retfi\030\005 \001(\t", 504);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerReturnIntChar.proto", &protobuf_RegisterTypes);
  ServerRetIntChar::default_instance_ = new ServerRetIntChar();
  ServerDoubleIntChar::default_instance_ = new ServerDoubleIntChar();
  ServerDoubleIntTwoChar::default_instance_ = new ServerDoubleIntTwoChar();
  ServerThreeIntChar::default_instance_ = new ServerThreeIntChar();
  ServerFourIntChar::default_instance_ = new ServerFourIntChar();
  ServerThreeIntTwoChar::default_instance_ = new ServerThreeIntTwoChar();
  ServerRetIntChar::default_instance_->InitAsDefaultInstance();
  ServerDoubleIntChar::default_instance_->InitAsDefaultInstance();
  ServerDoubleIntTwoChar::default_instance_->InitAsDefaultInstance();
  ServerThreeIntChar::default_instance_->InitAsDefaultInstance();
  ServerFourIntChar::default_instance_->InitAsDefaultInstance();
  ServerThreeIntTwoChar::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ServerReturnIntChar_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ServerReturnIntChar_2eproto {
  StaticDescriptorInitializer_ServerReturnIntChar_2eproto() {
    protobuf_AddDesc_ServerReturnIntChar_2eproto();
  }
} static_descriptor_initializer_ServerReturnIntChar_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ServerRetIntChar::kRetfFieldNumber;
const int ServerRetIntChar::kRetsFieldNumber;
#endif  // !_MSC_VER

ServerRetIntChar::ServerRetIntChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerRetIntChar)
}

void ServerRetIntChar::InitAsDefaultInstance() {
}

ServerRetIntChar::ServerRetIntChar(const ServerRetIntChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerRetIntChar)
}

void ServerRetIntChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  rets_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerRetIntChar::~ServerRetIntChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerRetIntChar)
  SharedDtor();
}

void ServerRetIntChar::SharedDtor() {
  if (rets_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rets_;
  }
  if (this != default_instance_) {
  }
}

void ServerRetIntChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRetIntChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerRetIntChar_descriptor_;
}

const ServerRetIntChar& ServerRetIntChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerRetIntChar* ServerRetIntChar::default_instance_ = NULL;

ServerRetIntChar* ServerRetIntChar::New() const {
  return new ServerRetIntChar;
}

void ServerRetIntChar::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    retf_ = GOOGLE_LONGLONG(0);
    if (has_rets()) {
      if (rets_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rets_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerRetIntChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerRetIntChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_rets;
        break;
      }

      // required string rets = 2;
      case 2: {
        if (tag == 18) {
         parse_rets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rets()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rets().data(), this->rets().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rets");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerRetIntChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerRetIntChar)
  return false;
#undef DO_
}

void ServerRetIntChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerRetIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // required string rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rets().data(), this->rets().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rets");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rets(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerRetIntChar)
}

::google::protobuf::uint8* ServerRetIntChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerRetIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // required string rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rets().data(), this->rets().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rets");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rets(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerRetIntChar)
  return target;
}

int ServerRetIntChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

    // required string rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rets());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRetIntChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerRetIntChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerRetIntChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerRetIntChar::MergeFrom(const ServerRetIntChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerRetIntChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRetIntChar::CopyFrom(const ServerRetIntChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRetIntChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ServerRetIntChar::Swap(ServerRetIntChar* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    std::swap(rets_, other->rets_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerRetIntChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerRetIntChar_descriptor_;
  metadata.reflection = ServerRetIntChar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerDoubleIntChar::kRetfFieldNumber;
const int ServerDoubleIntChar::kRetsFieldNumber;
const int ServerDoubleIntChar::kRettFieldNumber;
#endif  // !_MSC_VER

ServerDoubleIntChar::ServerDoubleIntChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerDoubleIntChar)
}

void ServerDoubleIntChar::InitAsDefaultInstance() {
}

ServerDoubleIntChar::ServerDoubleIntChar(const ServerDoubleIntChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerDoubleIntChar)
}

void ServerDoubleIntChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  rets_ = GOOGLE_LONGLONG(0);
  rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerDoubleIntChar::~ServerDoubleIntChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerDoubleIntChar)
  SharedDtor();
}

void ServerDoubleIntChar::SharedDtor() {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rett_;
  }
  if (this != default_instance_) {
  }
}

void ServerDoubleIntChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDoubleIntChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerDoubleIntChar_descriptor_;
}

const ServerDoubleIntChar& ServerDoubleIntChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerDoubleIntChar* ServerDoubleIntChar::default_instance_ = NULL;

ServerDoubleIntChar* ServerDoubleIntChar::New() const {
  return new ServerDoubleIntChar;
}

void ServerDoubleIntChar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerDoubleIntChar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(retf_, rets_);
    if (has_rett()) {
      if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rett_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerDoubleIntChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerDoubleIntChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // required int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rets_)));
          set_has_rets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rett;
        break;
      }

      // required string rett = 3;
      case 3: {
        if (tag == 26) {
         parse_rett:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rett()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rett().data(), this->rett().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rett");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerDoubleIntChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerDoubleIntChar)
  return false;
#undef DO_
}

void ServerDoubleIntChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerDoubleIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rets(), output);
  }

  // required string rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rett().data(), this->rett().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rett");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rett(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerDoubleIntChar)
}

::google::protobuf::uint8* ServerDoubleIntChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerDoubleIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rets(), target);
  }

  // required string rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rett().data(), this->rett().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rett");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rett(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerDoubleIntChar)
  return target;
}

int ServerDoubleIntChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

    // required int64 rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rets());
    }

    // required string rett = 3;
    if (has_rett()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rett());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDoubleIntChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerDoubleIntChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerDoubleIntChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerDoubleIntChar::MergeFrom(const ServerDoubleIntChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
    if (from.has_rett()) {
      set_rett(from.rett());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerDoubleIntChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDoubleIntChar::CopyFrom(const ServerDoubleIntChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDoubleIntChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ServerDoubleIntChar::Swap(ServerDoubleIntChar* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    std::swap(rets_, other->rets_);
    std::swap(rett_, other->rett_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerDoubleIntChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerDoubleIntChar_descriptor_;
  metadata.reflection = ServerDoubleIntChar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerDoubleIntTwoChar::kRetfFieldNumber;
const int ServerDoubleIntTwoChar::kRetsFieldNumber;
const int ServerDoubleIntTwoChar::kRettFieldNumber;
const int ServerDoubleIntTwoChar::kReftFieldNumber;
#endif  // !_MSC_VER

ServerDoubleIntTwoChar::ServerDoubleIntTwoChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerDoubleIntTwoChar)
}

void ServerDoubleIntTwoChar::InitAsDefaultInstance() {
}

ServerDoubleIntTwoChar::ServerDoubleIntTwoChar(const ServerDoubleIntTwoChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerDoubleIntTwoChar)
}

void ServerDoubleIntTwoChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  rets_ = GOOGLE_LONGLONG(0);
  rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reft_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerDoubleIntTwoChar::~ServerDoubleIntTwoChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerDoubleIntTwoChar)
  SharedDtor();
}

void ServerDoubleIntTwoChar::SharedDtor() {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rett_;
  }
  if (reft_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reft_;
  }
  if (this != default_instance_) {
  }
}

void ServerDoubleIntTwoChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDoubleIntTwoChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerDoubleIntTwoChar_descriptor_;
}

const ServerDoubleIntTwoChar& ServerDoubleIntTwoChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerDoubleIntTwoChar* ServerDoubleIntTwoChar::default_instance_ = NULL;

ServerDoubleIntTwoChar* ServerDoubleIntTwoChar::New() const {
  return new ServerDoubleIntTwoChar;
}

void ServerDoubleIntTwoChar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerDoubleIntTwoChar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(retf_, rets_);
    if (has_rett()) {
      if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rett_->clear();
      }
    }
    if (has_reft()) {
      if (reft_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reft_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerDoubleIntTwoChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerDoubleIntTwoChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // required int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rets_)));
          set_has_rets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rett;
        break;
      }

      // required string rett = 3;
      case 3: {
        if (tag == 26) {
         parse_rett:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rett()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rett().data(), this->rett().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rett");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reft;
        break;
      }

      // required string reft = 4;
      case 4: {
        if (tag == 34) {
         parse_reft:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reft()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reft().data(), this->reft().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reft");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerDoubleIntTwoChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerDoubleIntTwoChar)
  return false;
#undef DO_
}

void ServerDoubleIntTwoChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerDoubleIntTwoChar)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rets(), output);
  }

  // required string rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rett().data(), this->rett().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rett");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rett(), output);
  }

  // required string reft = 4;
  if (has_reft()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reft().data(), this->reft().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reft");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reft(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerDoubleIntTwoChar)
}

::google::protobuf::uint8* ServerDoubleIntTwoChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerDoubleIntTwoChar)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rets(), target);
  }

  // required string rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rett().data(), this->rett().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rett");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rett(), target);
  }

  // required string reft = 4;
  if (has_reft()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reft().data(), this->reft().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reft");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reft(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerDoubleIntTwoChar)
  return target;
}

int ServerDoubleIntTwoChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

    // required int64 rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rets());
    }

    // required string rett = 3;
    if (has_rett()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rett());
    }

    // required string reft = 4;
    if (has_reft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reft());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDoubleIntTwoChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerDoubleIntTwoChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerDoubleIntTwoChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerDoubleIntTwoChar::MergeFrom(const ServerDoubleIntTwoChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
    if (from.has_rett()) {
      set_rett(from.rett());
    }
    if (from.has_reft()) {
      set_reft(from.reft());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerDoubleIntTwoChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDoubleIntTwoChar::CopyFrom(const ServerDoubleIntTwoChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDoubleIntTwoChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ServerDoubleIntTwoChar::Swap(ServerDoubleIntTwoChar* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    std::swap(rets_, other->rets_);
    std::swap(rett_, other->rett_);
    std::swap(reft_, other->reft_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerDoubleIntTwoChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerDoubleIntTwoChar_descriptor_;
  metadata.reflection = ServerDoubleIntTwoChar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerThreeIntChar::kRetfFieldNumber;
const int ServerThreeIntChar::kRetsFieldNumber;
const int ServerThreeIntChar::kRettFieldNumber;
const int ServerThreeIntChar::kRetfoFieldNumber;
#endif  // !_MSC_VER

ServerThreeIntChar::ServerThreeIntChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerThreeIntChar)
}

void ServerThreeIntChar::InitAsDefaultInstance() {
}

ServerThreeIntChar::ServerThreeIntChar(const ServerThreeIntChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerThreeIntChar)
}

void ServerThreeIntChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  rets_ = GOOGLE_LONGLONG(0);
  rett_ = GOOGLE_LONGLONG(0);
  retfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerThreeIntChar::~ServerThreeIntChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerThreeIntChar)
  SharedDtor();
}

void ServerThreeIntChar::SharedDtor() {
  if (retfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfo_;
  }
  if (this != default_instance_) {
  }
}

void ServerThreeIntChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerThreeIntChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerThreeIntChar_descriptor_;
}

const ServerThreeIntChar& ServerThreeIntChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerThreeIntChar* ServerThreeIntChar::default_instance_ = NULL;

ServerThreeIntChar* ServerThreeIntChar::New() const {
  return new ServerThreeIntChar;
}

void ServerThreeIntChar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerThreeIntChar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(retf_, rett_);
    if (has_retfo()) {
      if (retfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retfo_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerThreeIntChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerThreeIntChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // required int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rets_)));
          set_has_rets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rett;
        break;
      }

      // required int64 rett = 3;
      case 3: {
        if (tag == 24) {
         parse_rett:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rett_)));
          set_has_rett();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_retfo;
        break;
      }

      // required string retfo = 4;
      case 4: {
        if (tag == 34) {
         parse_retfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retfo().data(), this->retfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retfo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerThreeIntChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerThreeIntChar)
  return false;
#undef DO_
}

void ServerThreeIntChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerThreeIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rets(), output);
  }

  // required int64 rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rett(), output);
  }

  // required string retfo = 4;
  if (has_retfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfo().data(), this->retfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retfo(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerThreeIntChar)
}

::google::protobuf::uint8* ServerThreeIntChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerThreeIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rets(), target);
  }

  // required int64 rett = 3;
  if (has_rett()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rett(), target);
  }

  // required string retfo = 4;
  if (has_retfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfo().data(), this->retfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retfo(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerThreeIntChar)
  return target;
}

int ServerThreeIntChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

    // required int64 rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rets());
    }

    // required int64 rett = 3;
    if (has_rett()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rett());
    }

    // required string retfo = 4;
    if (has_retfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retfo());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerThreeIntChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerThreeIntChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerThreeIntChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerThreeIntChar::MergeFrom(const ServerThreeIntChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
    if (from.has_rett()) {
      set_rett(from.rett());
    }
    if (from.has_retfo()) {
      set_retfo(from.retfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerThreeIntChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerThreeIntChar::CopyFrom(const ServerThreeIntChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerThreeIntChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ServerThreeIntChar::Swap(ServerThreeIntChar* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    std::swap(rets_, other->rets_);
    std::swap(rett_, other->rett_);
    std::swap(retfo_, other->retfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerThreeIntChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerThreeIntChar_descriptor_;
  metadata.reflection = ServerThreeIntChar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerFourIntChar::kRetfFieldNumber;
const int ServerFourIntChar::kRetsFieldNumber;
const int ServerFourIntChar::kRettFieldNumber;
const int ServerFourIntChar::kRetfoFieldNumber;
const int ServerFourIntChar::kRetfiFieldNumber;
#endif  // !_MSC_VER

ServerFourIntChar::ServerFourIntChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerFourIntChar)
}

void ServerFourIntChar::InitAsDefaultInstance() {
}

ServerFourIntChar::ServerFourIntChar(const ServerFourIntChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerFourIntChar)
}

void ServerFourIntChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retf_ = GOOGLE_LONGLONG(0);
  rets_ = GOOGLE_LONGLONG(0);
  rett_ = GOOGLE_LONGLONG(0);
  retfo_ = GOOGLE_LONGLONG(0);
  retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerFourIntChar::~ServerFourIntChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerFourIntChar)
  SharedDtor();
}

void ServerFourIntChar::SharedDtor() {
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfi_;
  }
  if (this != default_instance_) {
  }
}

void ServerFourIntChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerFourIntChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerFourIntChar_descriptor_;
}

const ServerFourIntChar& ServerFourIntChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerFourIntChar* ServerFourIntChar::default_instance_ = NULL;

ServerFourIntChar* ServerFourIntChar::New() const {
  return new ServerFourIntChar;
}

void ServerFourIntChar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerFourIntChar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(retf_, retfo_);
    if (has_retfi()) {
      if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retfi_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerFourIntChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerFourIntChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 retf = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retf_)));
          set_has_retf();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // required int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rets_)));
          set_has_rets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rett;
        break;
      }

      // required int64 rett = 3;
      case 3: {
        if (tag == 24) {
         parse_rett:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rett_)));
          set_has_rett();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_retfo;
        break;
      }

      // required int64 retfo = 4;
      case 4: {
        if (tag == 32) {
         parse_retfo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &retfo_)));
          set_has_retfo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_retfi;
        break;
      }

      // required string retfi = 5;
      case 5: {
        if (tag == 42) {
         parse_retfi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retfi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retfi().data(), this->retfi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retfi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerFourIntChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerFourIntChar)
  return false;
#undef DO_
}

void ServerFourIntChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerFourIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->retf(), output);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rets(), output);
  }

  // required int64 rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rett(), output);
  }

  // required int64 retfo = 4;
  if (has_retfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->retfo(), output);
  }

  // required string retfi = 5;
  if (has_retfi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfi().data(), this->retfi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->retfi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerFourIntChar)
}

::google::protobuf::uint8* ServerFourIntChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerFourIntChar)
  // required int64 retf = 1;
  if (has_retf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->retf(), target);
  }

  // required int64 rets = 2;
  if (has_rets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rets(), target);
  }

  // required int64 rett = 3;
  if (has_rett()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rett(), target);
  }

  // required int64 retfo = 4;
  if (has_retfo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->retfo(), target);
  }

  // required string retfi = 5;
  if (has_retfi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfi().data(), this->retfi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retfi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerFourIntChar)
  return target;
}

int ServerFourIntChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 retf = 1;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retf());
    }

    // required int64 rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rets());
    }

    // required int64 rett = 3;
    if (has_rett()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rett());
    }

    // required int64 retfo = 4;
    if (has_retfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->retfo());
    }

    // required string retfi = 5;
    if (has_retfi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retfi());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerFourIntChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerFourIntChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerFourIntChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerFourIntChar::MergeFrom(const ServerFourIntChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
    if (from.has_rett()) {
      set_rett(from.rett());
    }
    if (from.has_retfo()) {
      set_retfo(from.retfo());
    }
    if (from.has_retfi()) {
      set_retfi(from.retfi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerFourIntChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerFourIntChar::CopyFrom(const ServerFourIntChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerFourIntChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void ServerFourIntChar::Swap(ServerFourIntChar* other) {
  if (other != this) {
    std::swap(retf_, other->retf_);
    std::swap(rets_, other->rets_);
    std::swap(rett_, other->rett_);
    std::swap(retfo_, other->retfo_);
    std::swap(retfi_, other->retfi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerFourIntChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerFourIntChar_descriptor_;
  metadata.reflection = ServerFourIntChar_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServerThreeIntTwoChar::kCodeFieldNumber;
const int ServerThreeIntTwoChar::kRetsFieldNumber;
const int ServerThreeIntTwoChar::kRettFieldNumber;
const int ServerThreeIntTwoChar::kRetfFieldNumber;
const int ServerThreeIntTwoChar::kRetfiFieldNumber;
#endif  // !_MSC_VER

ServerThreeIntTwoChar::ServerThreeIntTwoChar()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerReturn.ServerThreeIntTwoChar)
}

void ServerThreeIntTwoChar::InitAsDefaultInstance() {
}

ServerThreeIntTwoChar::ServerThreeIntTwoChar(const ServerThreeIntTwoChar& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerReturn.ServerThreeIntTwoChar)
}

void ServerThreeIntTwoChar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  code_ = GOOGLE_LONGLONG(0);
  rets_ = GOOGLE_LONGLONG(0);
  rett_ = GOOGLE_LONGLONG(0);
  retf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServerThreeIntTwoChar::~ServerThreeIntTwoChar() {
  // @@protoc_insertion_point(destructor:ServerReturn.ServerThreeIntTwoChar)
  SharedDtor();
}

void ServerThreeIntTwoChar::SharedDtor() {
  if (retf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retf_;
  }
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfi_;
  }
  if (this != default_instance_) {
  }
}

void ServerThreeIntTwoChar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerThreeIntTwoChar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerThreeIntTwoChar_descriptor_;
}

const ServerThreeIntTwoChar& ServerThreeIntTwoChar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ServerReturnIntChar_2eproto();
  return *default_instance_;
}

ServerThreeIntTwoChar* ServerThreeIntTwoChar::default_instance_ = NULL;

ServerThreeIntTwoChar* ServerThreeIntTwoChar::New() const {
  return new ServerThreeIntTwoChar;
}

void ServerThreeIntTwoChar::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServerThreeIntTwoChar*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(code_, rett_);
    if (has_retf()) {
      if (retf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retf_->clear();
      }
    }
    if (has_retfi()) {
      if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retfi_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServerThreeIntTwoChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerReturn.ServerThreeIntTwoChar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rets;
        break;
      }

      // optional int64 rets = 2;
      case 2: {
        if (tag == 16) {
         parse_rets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rets_)));
          set_has_rets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_rett;
        break;
      }

      // optional int64 rett = 3;
      case 3: {
        if (tag == 24) {
         parse_rett:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rett_)));
          set_has_rett();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_retf;
        break;
      }

      // optional string retf = 4;
      case 4: {
        if (tag == 34) {
         parse_retf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retf().data(), this->retf().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retf");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_retfi;
        break;
      }

      // optional string retfi = 5;
      case 5: {
        if (tag == 42) {
         parse_retfi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retfi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retfi().data(), this->retfi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retfi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerReturn.ServerThreeIntTwoChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerReturn.ServerThreeIntTwoChar)
  return false;
#undef DO_
}

void ServerThreeIntTwoChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerReturn.ServerThreeIntTwoChar)
  // required int64 code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->code(), output);
  }

  // optional int64 rets = 2;
  if (has_rets()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->rets(), output);
  }

  // optional int64 rett = 3;
  if (has_rett()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rett(), output);
  }

  // optional string retf = 4;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retf().data(), this->retf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retf(), output);
  }

  // optional string retfi = 5;
  if (has_retfi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfi().data(), this->retfi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->retfi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerReturn.ServerThreeIntTwoChar)
}

::google::protobuf::uint8* ServerThreeIntTwoChar::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerReturn.ServerThreeIntTwoChar)
  // required int64 code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->code(), target);
  }

  // optional int64 rets = 2;
  if (has_rets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->rets(), target);
  }

  // optional int64 rett = 3;
  if (has_rett()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rett(), target);
  }

  // optional string retf = 4;
  if (has_retf()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retf().data(), this->retf().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retf(), target);
  }

  // optional string retfi = 5;
  if (has_retfi()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retfi().data(), this->retfi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retfi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retfi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerReturn.ServerThreeIntTwoChar)
  return target;
}

int ServerThreeIntTwoChar::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->code());
    }

    // optional int64 rets = 2;
    if (has_rets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rets());
    }

    // optional int64 rett = 3;
    if (has_rett()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rett());
    }

    // optional string retf = 4;
    if (has_retf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retf());
    }

    // optional string retfi = 5;
    if (has_retfi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retfi());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerThreeIntTwoChar::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServerThreeIntTwoChar* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServerThreeIntTwoChar*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServerThreeIntTwoChar::MergeFrom(const ServerThreeIntTwoChar& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_rets()) {
      set_rets(from.rets());
    }
    if (from.has_rett()) {
      set_rett(from.rett());
    }
    if (from.has_retf()) {
      set_retf(from.retf());
    }
    if (from.has_retfi()) {
      set_retfi(from.retfi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServerThreeIntTwoChar::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerThreeIntTwoChar::CopyFrom(const ServerThreeIntTwoChar& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerThreeIntTwoChar::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ServerThreeIntTwoChar::Swap(ServerThreeIntTwoChar* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(rets_, other->rets_);
    std::swap(rett_, other->rett_);
    std::swap(retf_, other->retf_);
    std::swap(retfi_, other->retfi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServerThreeIntTwoChar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerThreeIntTwoChar_descriptor_;
  metadata.reflection = ServerThreeIntTwoChar_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerReturn

// @@protoc_insertion_point(global_scope)
