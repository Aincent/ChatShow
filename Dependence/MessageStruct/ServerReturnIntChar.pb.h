// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerReturnIntChar.proto

#ifndef PROTOBUF_ServerReturnIntChar_2eproto__INCLUDED
#define PROTOBUF_ServerReturnIntChar_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ServerReturn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

class ServerRetIntChar;
class ServerDoubleIntChar;
class ServerDoubleIntTwoChar;
class ServerThreeIntChar;
class ServerFourIntChar;
class ServerThreeIntTwoChar;

// ===================================================================

class ServerRetIntChar : public ::google::protobuf::Message {
 public:
  ServerRetIntChar();
  virtual ~ServerRetIntChar();

  ServerRetIntChar(const ServerRetIntChar& from);

  inline ServerRetIntChar& operator=(const ServerRetIntChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerRetIntChar& default_instance();

  void Swap(ServerRetIntChar* other);

  // implements Message ----------------------------------------------

  ServerRetIntChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerRetIntChar& from);
  void MergeFrom(const ServerRetIntChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 retf = 1;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 1;
  inline ::google::protobuf::int64 retf() const;
  inline void set_retf(::google::protobuf::int64 value);

  // required string rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline const ::std::string& rets() const;
  inline void set_rets(const ::std::string& value);
  inline void set_rets(const char* value);
  inline void set_rets(const char* value, size_t size);
  inline ::std::string* mutable_rets();
  inline ::std::string* release_rets();
  inline void set_allocated_rets(::std::string* rets);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerRetIntChar)
 private:
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 retf_;
  ::std::string* rets_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerRetIntChar* default_instance_;
};
// -------------------------------------------------------------------

class ServerDoubleIntChar : public ::google::protobuf::Message {
 public:
  ServerDoubleIntChar();
  virtual ~ServerDoubleIntChar();

  ServerDoubleIntChar(const ServerDoubleIntChar& from);

  inline ServerDoubleIntChar& operator=(const ServerDoubleIntChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDoubleIntChar& default_instance();

  void Swap(ServerDoubleIntChar* other);

  // implements Message ----------------------------------------------

  ServerDoubleIntChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerDoubleIntChar& from);
  void MergeFrom(const ServerDoubleIntChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 retf = 1;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 1;
  inline ::google::protobuf::int64 retf() const;
  inline void set_retf(::google::protobuf::int64 value);

  // required int64 rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline ::google::protobuf::int64 rets() const;
  inline void set_rets(::google::protobuf::int64 value);

  // required string rett = 3;
  inline bool has_rett() const;
  inline void clear_rett();
  static const int kRettFieldNumber = 3;
  inline const ::std::string& rett() const;
  inline void set_rett(const ::std::string& value);
  inline void set_rett(const char* value);
  inline void set_rett(const char* value, size_t size);
  inline ::std::string* mutable_rett();
  inline ::std::string* release_rett();
  inline void set_allocated_rett(::std::string* rett);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerDoubleIntChar)
 private:
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_rett();
  inline void clear_has_rett();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 retf_;
  ::google::protobuf::int64 rets_;
  ::std::string* rett_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerDoubleIntChar* default_instance_;
};
// -------------------------------------------------------------------

class ServerDoubleIntTwoChar : public ::google::protobuf::Message {
 public:
  ServerDoubleIntTwoChar();
  virtual ~ServerDoubleIntTwoChar();

  ServerDoubleIntTwoChar(const ServerDoubleIntTwoChar& from);

  inline ServerDoubleIntTwoChar& operator=(const ServerDoubleIntTwoChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDoubleIntTwoChar& default_instance();

  void Swap(ServerDoubleIntTwoChar* other);

  // implements Message ----------------------------------------------

  ServerDoubleIntTwoChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerDoubleIntTwoChar& from);
  void MergeFrom(const ServerDoubleIntTwoChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 retf = 1;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 1;
  inline ::google::protobuf::int64 retf() const;
  inline void set_retf(::google::protobuf::int64 value);

  // required int64 rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline ::google::protobuf::int64 rets() const;
  inline void set_rets(::google::protobuf::int64 value);

  // required string rett = 3;
  inline bool has_rett() const;
  inline void clear_rett();
  static const int kRettFieldNumber = 3;
  inline const ::std::string& rett() const;
  inline void set_rett(const ::std::string& value);
  inline void set_rett(const char* value);
  inline void set_rett(const char* value, size_t size);
  inline ::std::string* mutable_rett();
  inline ::std::string* release_rett();
  inline void set_allocated_rett(::std::string* rett);

  // required string reft = 4;
  inline bool has_reft() const;
  inline void clear_reft();
  static const int kReftFieldNumber = 4;
  inline const ::std::string& reft() const;
  inline void set_reft(const ::std::string& value);
  inline void set_reft(const char* value);
  inline void set_reft(const char* value, size_t size);
  inline ::std::string* mutable_reft();
  inline ::std::string* release_reft();
  inline void set_allocated_reft(::std::string* reft);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerDoubleIntTwoChar)
 private:
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_rett();
  inline void clear_has_rett();
  inline void set_has_reft();
  inline void clear_has_reft();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 retf_;
  ::google::protobuf::int64 rets_;
  ::std::string* rett_;
  ::std::string* reft_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerDoubleIntTwoChar* default_instance_;
};
// -------------------------------------------------------------------

class ServerThreeIntChar : public ::google::protobuf::Message {
 public:
  ServerThreeIntChar();
  virtual ~ServerThreeIntChar();

  ServerThreeIntChar(const ServerThreeIntChar& from);

  inline ServerThreeIntChar& operator=(const ServerThreeIntChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerThreeIntChar& default_instance();

  void Swap(ServerThreeIntChar* other);

  // implements Message ----------------------------------------------

  ServerThreeIntChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerThreeIntChar& from);
  void MergeFrom(const ServerThreeIntChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 retf = 1;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 1;
  inline ::google::protobuf::int64 retf() const;
  inline void set_retf(::google::protobuf::int64 value);

  // required int64 rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline ::google::protobuf::int64 rets() const;
  inline void set_rets(::google::protobuf::int64 value);

  // required int64 rett = 3;
  inline bool has_rett() const;
  inline void clear_rett();
  static const int kRettFieldNumber = 3;
  inline ::google::protobuf::int64 rett() const;
  inline void set_rett(::google::protobuf::int64 value);

  // required string retfo = 4;
  inline bool has_retfo() const;
  inline void clear_retfo();
  static const int kRetfoFieldNumber = 4;
  inline const ::std::string& retfo() const;
  inline void set_retfo(const ::std::string& value);
  inline void set_retfo(const char* value);
  inline void set_retfo(const char* value, size_t size);
  inline ::std::string* mutable_retfo();
  inline ::std::string* release_retfo();
  inline void set_allocated_retfo(::std::string* retfo);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerThreeIntChar)
 private:
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_rett();
  inline void clear_has_rett();
  inline void set_has_retfo();
  inline void clear_has_retfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 retf_;
  ::google::protobuf::int64 rets_;
  ::google::protobuf::int64 rett_;
  ::std::string* retfo_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerThreeIntChar* default_instance_;
};
// -------------------------------------------------------------------

class ServerFourIntChar : public ::google::protobuf::Message {
 public:
  ServerFourIntChar();
  virtual ~ServerFourIntChar();

  ServerFourIntChar(const ServerFourIntChar& from);

  inline ServerFourIntChar& operator=(const ServerFourIntChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerFourIntChar& default_instance();

  void Swap(ServerFourIntChar* other);

  // implements Message ----------------------------------------------

  ServerFourIntChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerFourIntChar& from);
  void MergeFrom(const ServerFourIntChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 retf = 1;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 1;
  inline ::google::protobuf::int64 retf() const;
  inline void set_retf(::google::protobuf::int64 value);

  // required int64 rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline ::google::protobuf::int64 rets() const;
  inline void set_rets(::google::protobuf::int64 value);

  // required int64 rett = 3;
  inline bool has_rett() const;
  inline void clear_rett();
  static const int kRettFieldNumber = 3;
  inline ::google::protobuf::int64 rett() const;
  inline void set_rett(::google::protobuf::int64 value);

  // required int64 retfo = 4;
  inline bool has_retfo() const;
  inline void clear_retfo();
  static const int kRetfoFieldNumber = 4;
  inline ::google::protobuf::int64 retfo() const;
  inline void set_retfo(::google::protobuf::int64 value);

  // required string retfi = 5;
  inline bool has_retfi() const;
  inline void clear_retfi();
  static const int kRetfiFieldNumber = 5;
  inline const ::std::string& retfi() const;
  inline void set_retfi(const ::std::string& value);
  inline void set_retfi(const char* value);
  inline void set_retfi(const char* value, size_t size);
  inline ::std::string* mutable_retfi();
  inline ::std::string* release_retfi();
  inline void set_allocated_retfi(::std::string* retfi);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerFourIntChar)
 private:
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_rett();
  inline void clear_has_rett();
  inline void set_has_retfo();
  inline void clear_has_retfo();
  inline void set_has_retfi();
  inline void clear_has_retfi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 retf_;
  ::google::protobuf::int64 rets_;
  ::google::protobuf::int64 rett_;
  ::google::protobuf::int64 retfo_;
  ::std::string* retfi_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerFourIntChar* default_instance_;
};
// -------------------------------------------------------------------

class ServerThreeIntTwoChar : public ::google::protobuf::Message {
 public:
  ServerThreeIntTwoChar();
  virtual ~ServerThreeIntTwoChar();

  ServerThreeIntTwoChar(const ServerThreeIntTwoChar& from);

  inline ServerThreeIntTwoChar& operator=(const ServerThreeIntTwoChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerThreeIntTwoChar& default_instance();

  void Swap(ServerThreeIntTwoChar* other);

  // implements Message ----------------------------------------------

  ServerThreeIntTwoChar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerThreeIntTwoChar& from);
  void MergeFrom(const ServerThreeIntTwoChar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::google::protobuf::int64 code() const;
  inline void set_code(::google::protobuf::int64 value);

  // optional int64 rets = 2;
  inline bool has_rets() const;
  inline void clear_rets();
  static const int kRetsFieldNumber = 2;
  inline ::google::protobuf::int64 rets() const;
  inline void set_rets(::google::protobuf::int64 value);

  // optional int64 rett = 3;
  inline bool has_rett() const;
  inline void clear_rett();
  static const int kRettFieldNumber = 3;
  inline ::google::protobuf::int64 rett() const;
  inline void set_rett(::google::protobuf::int64 value);

  // optional string retf = 4;
  inline bool has_retf() const;
  inline void clear_retf();
  static const int kRetfFieldNumber = 4;
  inline const ::std::string& retf() const;
  inline void set_retf(const ::std::string& value);
  inline void set_retf(const char* value);
  inline void set_retf(const char* value, size_t size);
  inline ::std::string* mutable_retf();
  inline ::std::string* release_retf();
  inline void set_allocated_retf(::std::string* retf);

  // optional string retfi = 5;
  inline bool has_retfi() const;
  inline void clear_retfi();
  static const int kRetfiFieldNumber = 5;
  inline const ::std::string& retfi() const;
  inline void set_retfi(const ::std::string& value);
  inline void set_retfi(const char* value);
  inline void set_retfi(const char* value, size_t size);
  inline ::std::string* mutable_retfi();
  inline ::std::string* release_retfi();
  inline void set_allocated_retfi(::std::string* retfi);

  // @@protoc_insertion_point(class_scope:ServerReturn.ServerThreeIntTwoChar)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_rets();
  inline void clear_has_rets();
  inline void set_has_rett();
  inline void clear_has_rett();
  inline void set_has_retf();
  inline void clear_has_retf();
  inline void set_has_retfi();
  inline void clear_has_retfi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 code_;
  ::google::protobuf::int64 rets_;
  ::google::protobuf::int64 rett_;
  ::std::string* retf_;
  ::std::string* retfi_;
  friend void  protobuf_AddDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_AssignDesc_ServerReturnIntChar_2eproto();
  friend void protobuf_ShutdownFile_ServerReturnIntChar_2eproto();

  void InitAsDefaultInstance();
  static ServerThreeIntTwoChar* default_instance_;
};
// ===================================================================


// ===================================================================

// ServerRetIntChar

// required int64 retf = 1;
inline bool ServerRetIntChar::has_retf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerRetIntChar::set_has_retf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerRetIntChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerRetIntChar::clear_retf() {
  retf_ = GOOGLE_LONGLONG(0);
  clear_has_retf();
}
inline ::google::protobuf::int64 ServerRetIntChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerRetIntChar.retf)
  return retf_;
}
inline void ServerRetIntChar::set_retf(::google::protobuf::int64 value) {
  set_has_retf();
  retf_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerRetIntChar.retf)
}

// required string rets = 2;
inline bool ServerRetIntChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerRetIntChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerRetIntChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerRetIntChar::clear_rets() {
  if (rets_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rets_->clear();
  }
  clear_has_rets();
}
inline const ::std::string& ServerRetIntChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerRetIntChar.rets)
  return *rets_;
}
inline void ServerRetIntChar::set_rets(const ::std::string& value) {
  set_has_rets();
  if (rets_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rets_ = new ::std::string;
  }
  rets_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerRetIntChar.rets)
}
inline void ServerRetIntChar::set_rets(const char* value) {
  set_has_rets();
  if (rets_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rets_ = new ::std::string;
  }
  rets_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerRetIntChar.rets)
}
inline void ServerRetIntChar::set_rets(const char* value, size_t size) {
  set_has_rets();
  if (rets_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rets_ = new ::std::string;
  }
  rets_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerRetIntChar.rets)
}
inline ::std::string* ServerRetIntChar::mutable_rets() {
  set_has_rets();
  if (rets_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rets_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerRetIntChar.rets)
  return rets_;
}
inline ::std::string* ServerRetIntChar::release_rets() {
  clear_has_rets();
  if (rets_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rets_;
    rets_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerRetIntChar::set_allocated_rets(::std::string* rets) {
  if (rets_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rets_;
  }
  if (rets) {
    set_has_rets();
    rets_ = rets;
  } else {
    clear_has_rets();
    rets_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerRetIntChar.rets)
}

// -------------------------------------------------------------------

// ServerDoubleIntChar

// required int64 retf = 1;
inline bool ServerDoubleIntChar::has_retf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerDoubleIntChar::set_has_retf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerDoubleIntChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerDoubleIntChar::clear_retf() {
  retf_ = GOOGLE_LONGLONG(0);
  clear_has_retf();
}
inline ::google::protobuf::int64 ServerDoubleIntChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntChar.retf)
  return retf_;
}
inline void ServerDoubleIntChar::set_retf(::google::protobuf::int64 value) {
  set_has_retf();
  retf_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntChar.retf)
}

// required int64 rets = 2;
inline bool ServerDoubleIntChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerDoubleIntChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerDoubleIntChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerDoubleIntChar::clear_rets() {
  rets_ = GOOGLE_LONGLONG(0);
  clear_has_rets();
}
inline ::google::protobuf::int64 ServerDoubleIntChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntChar.rets)
  return rets_;
}
inline void ServerDoubleIntChar::set_rets(::google::protobuf::int64 value) {
  set_has_rets();
  rets_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntChar.rets)
}

// required string rett = 3;
inline bool ServerDoubleIntChar::has_rett() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerDoubleIntChar::set_has_rett() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerDoubleIntChar::clear_has_rett() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerDoubleIntChar::clear_rett() {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_->clear();
  }
  clear_has_rett();
}
inline const ::std::string& ServerDoubleIntChar::rett() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntChar.rett)
  return *rett_;
}
inline void ServerDoubleIntChar::set_rett(const ::std::string& value) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntChar.rett)
}
inline void ServerDoubleIntChar::set_rett(const char* value) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerDoubleIntChar.rett)
}
inline void ServerDoubleIntChar::set_rett(const char* value, size_t size) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerDoubleIntChar.rett)
}
inline ::std::string* ServerDoubleIntChar::mutable_rett() {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerDoubleIntChar.rett)
  return rett_;
}
inline ::std::string* ServerDoubleIntChar::release_rett() {
  clear_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rett_;
    rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerDoubleIntChar::set_allocated_rett(::std::string* rett) {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rett_;
  }
  if (rett) {
    set_has_rett();
    rett_ = rett;
  } else {
    clear_has_rett();
    rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerDoubleIntChar.rett)
}

// -------------------------------------------------------------------

// ServerDoubleIntTwoChar

// required int64 retf = 1;
inline bool ServerDoubleIntTwoChar::has_retf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerDoubleIntTwoChar::set_has_retf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerDoubleIntTwoChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerDoubleIntTwoChar::clear_retf() {
  retf_ = GOOGLE_LONGLONG(0);
  clear_has_retf();
}
inline ::google::protobuf::int64 ServerDoubleIntTwoChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntTwoChar.retf)
  return retf_;
}
inline void ServerDoubleIntTwoChar::set_retf(::google::protobuf::int64 value) {
  set_has_retf();
  retf_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntTwoChar.retf)
}

// required int64 rets = 2;
inline bool ServerDoubleIntTwoChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerDoubleIntTwoChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerDoubleIntTwoChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerDoubleIntTwoChar::clear_rets() {
  rets_ = GOOGLE_LONGLONG(0);
  clear_has_rets();
}
inline ::google::protobuf::int64 ServerDoubleIntTwoChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntTwoChar.rets)
  return rets_;
}
inline void ServerDoubleIntTwoChar::set_rets(::google::protobuf::int64 value) {
  set_has_rets();
  rets_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntTwoChar.rets)
}

// required string rett = 3;
inline bool ServerDoubleIntTwoChar::has_rett() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerDoubleIntTwoChar::set_has_rett() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerDoubleIntTwoChar::clear_has_rett() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerDoubleIntTwoChar::clear_rett() {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_->clear();
  }
  clear_has_rett();
}
inline const ::std::string& ServerDoubleIntTwoChar::rett() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntTwoChar.rett)
  return *rett_;
}
inline void ServerDoubleIntTwoChar::set_rett(const ::std::string& value) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntTwoChar.rett)
}
inline void ServerDoubleIntTwoChar::set_rett(const char* value) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerDoubleIntTwoChar.rett)
}
inline void ServerDoubleIntTwoChar::set_rett(const char* value, size_t size) {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  rett_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerDoubleIntTwoChar.rett)
}
inline ::std::string* ServerDoubleIntTwoChar::mutable_rett() {
  set_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rett_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerDoubleIntTwoChar.rett)
  return rett_;
}
inline ::std::string* ServerDoubleIntTwoChar::release_rett() {
  clear_has_rett();
  if (rett_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rett_;
    rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerDoubleIntTwoChar::set_allocated_rett(::std::string* rett) {
  if (rett_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rett_;
  }
  if (rett) {
    set_has_rett();
    rett_ = rett;
  } else {
    clear_has_rett();
    rett_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerDoubleIntTwoChar.rett)
}

// required string reft = 4;
inline bool ServerDoubleIntTwoChar::has_reft() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerDoubleIntTwoChar::set_has_reft() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerDoubleIntTwoChar::clear_has_reft() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerDoubleIntTwoChar::clear_reft() {
  if (reft_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reft_->clear();
  }
  clear_has_reft();
}
inline const ::std::string& ServerDoubleIntTwoChar::reft() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerDoubleIntTwoChar.reft)
  return *reft_;
}
inline void ServerDoubleIntTwoChar::set_reft(const ::std::string& value) {
  set_has_reft();
  if (reft_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reft_ = new ::std::string;
  }
  reft_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerDoubleIntTwoChar.reft)
}
inline void ServerDoubleIntTwoChar::set_reft(const char* value) {
  set_has_reft();
  if (reft_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reft_ = new ::std::string;
  }
  reft_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerDoubleIntTwoChar.reft)
}
inline void ServerDoubleIntTwoChar::set_reft(const char* value, size_t size) {
  set_has_reft();
  if (reft_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reft_ = new ::std::string;
  }
  reft_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerDoubleIntTwoChar.reft)
}
inline ::std::string* ServerDoubleIntTwoChar::mutable_reft() {
  set_has_reft();
  if (reft_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reft_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerDoubleIntTwoChar.reft)
  return reft_;
}
inline ::std::string* ServerDoubleIntTwoChar::release_reft() {
  clear_has_reft();
  if (reft_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reft_;
    reft_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerDoubleIntTwoChar::set_allocated_reft(::std::string* reft) {
  if (reft_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reft_;
  }
  if (reft) {
    set_has_reft();
    reft_ = reft;
  } else {
    clear_has_reft();
    reft_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerDoubleIntTwoChar.reft)
}

// -------------------------------------------------------------------

// ServerThreeIntChar

// required int64 retf = 1;
inline bool ServerThreeIntChar::has_retf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerThreeIntChar::set_has_retf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerThreeIntChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerThreeIntChar::clear_retf() {
  retf_ = GOOGLE_LONGLONG(0);
  clear_has_retf();
}
inline ::google::protobuf::int64 ServerThreeIntChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntChar.retf)
  return retf_;
}
inline void ServerThreeIntChar::set_retf(::google::protobuf::int64 value) {
  set_has_retf();
  retf_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntChar.retf)
}

// required int64 rets = 2;
inline bool ServerThreeIntChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerThreeIntChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerThreeIntChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerThreeIntChar::clear_rets() {
  rets_ = GOOGLE_LONGLONG(0);
  clear_has_rets();
}
inline ::google::protobuf::int64 ServerThreeIntChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntChar.rets)
  return rets_;
}
inline void ServerThreeIntChar::set_rets(::google::protobuf::int64 value) {
  set_has_rets();
  rets_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntChar.rets)
}

// required int64 rett = 3;
inline bool ServerThreeIntChar::has_rett() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerThreeIntChar::set_has_rett() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerThreeIntChar::clear_has_rett() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerThreeIntChar::clear_rett() {
  rett_ = GOOGLE_LONGLONG(0);
  clear_has_rett();
}
inline ::google::protobuf::int64 ServerThreeIntChar::rett() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntChar.rett)
  return rett_;
}
inline void ServerThreeIntChar::set_rett(::google::protobuf::int64 value) {
  set_has_rett();
  rett_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntChar.rett)
}

// required string retfo = 4;
inline bool ServerThreeIntChar::has_retfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerThreeIntChar::set_has_retfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerThreeIntChar::clear_has_retfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerThreeIntChar::clear_retfo() {
  if (retfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfo_->clear();
  }
  clear_has_retfo();
}
inline const ::std::string& ServerThreeIntChar::retfo() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntChar.retfo)
  return *retfo_;
}
inline void ServerThreeIntChar::set_retfo(const ::std::string& value) {
  set_has_retfo();
  if (retfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfo_ = new ::std::string;
  }
  retfo_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntChar.retfo)
}
inline void ServerThreeIntChar::set_retfo(const char* value) {
  set_has_retfo();
  if (retfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfo_ = new ::std::string;
  }
  retfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerThreeIntChar.retfo)
}
inline void ServerThreeIntChar::set_retfo(const char* value, size_t size) {
  set_has_retfo();
  if (retfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfo_ = new ::std::string;
  }
  retfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerThreeIntChar.retfo)
}
inline ::std::string* ServerThreeIntChar::mutable_retfo() {
  set_has_retfo();
  if (retfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerThreeIntChar.retfo)
  return retfo_;
}
inline ::std::string* ServerThreeIntChar::release_retfo() {
  clear_has_retfo();
  if (retfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retfo_;
    retfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerThreeIntChar::set_allocated_retfo(::std::string* retfo) {
  if (retfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfo_;
  }
  if (retfo) {
    set_has_retfo();
    retfo_ = retfo;
  } else {
    clear_has_retfo();
    retfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerThreeIntChar.retfo)
}

// -------------------------------------------------------------------

// ServerFourIntChar

// required int64 retf = 1;
inline bool ServerFourIntChar::has_retf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerFourIntChar::set_has_retf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerFourIntChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerFourIntChar::clear_retf() {
  retf_ = GOOGLE_LONGLONG(0);
  clear_has_retf();
}
inline ::google::protobuf::int64 ServerFourIntChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerFourIntChar.retf)
  return retf_;
}
inline void ServerFourIntChar::set_retf(::google::protobuf::int64 value) {
  set_has_retf();
  retf_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerFourIntChar.retf)
}

// required int64 rets = 2;
inline bool ServerFourIntChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerFourIntChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerFourIntChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerFourIntChar::clear_rets() {
  rets_ = GOOGLE_LONGLONG(0);
  clear_has_rets();
}
inline ::google::protobuf::int64 ServerFourIntChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerFourIntChar.rets)
  return rets_;
}
inline void ServerFourIntChar::set_rets(::google::protobuf::int64 value) {
  set_has_rets();
  rets_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerFourIntChar.rets)
}

// required int64 rett = 3;
inline bool ServerFourIntChar::has_rett() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerFourIntChar::set_has_rett() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerFourIntChar::clear_has_rett() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerFourIntChar::clear_rett() {
  rett_ = GOOGLE_LONGLONG(0);
  clear_has_rett();
}
inline ::google::protobuf::int64 ServerFourIntChar::rett() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerFourIntChar.rett)
  return rett_;
}
inline void ServerFourIntChar::set_rett(::google::protobuf::int64 value) {
  set_has_rett();
  rett_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerFourIntChar.rett)
}

// required int64 retfo = 4;
inline bool ServerFourIntChar::has_retfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerFourIntChar::set_has_retfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerFourIntChar::clear_has_retfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerFourIntChar::clear_retfo() {
  retfo_ = GOOGLE_LONGLONG(0);
  clear_has_retfo();
}
inline ::google::protobuf::int64 ServerFourIntChar::retfo() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerFourIntChar.retfo)
  return retfo_;
}
inline void ServerFourIntChar::set_retfo(::google::protobuf::int64 value) {
  set_has_retfo();
  retfo_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerFourIntChar.retfo)
}

// required string retfi = 5;
inline bool ServerFourIntChar::has_retfi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerFourIntChar::set_has_retfi() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerFourIntChar::clear_has_retfi() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerFourIntChar::clear_retfi() {
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_->clear();
  }
  clear_has_retfi();
}
inline const ::std::string& ServerFourIntChar::retfi() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerFourIntChar.retfi)
  return *retfi_;
}
inline void ServerFourIntChar::set_retfi(const ::std::string& value) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerFourIntChar.retfi)
}
inline void ServerFourIntChar::set_retfi(const char* value) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerFourIntChar.retfi)
}
inline void ServerFourIntChar::set_retfi(const char* value, size_t size) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerFourIntChar.retfi)
}
inline ::std::string* ServerFourIntChar::mutable_retfi() {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerFourIntChar.retfi)
  return retfi_;
}
inline ::std::string* ServerFourIntChar::release_retfi() {
  clear_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retfi_;
    retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerFourIntChar::set_allocated_retfi(::std::string* retfi) {
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfi_;
  }
  if (retfi) {
    set_has_retfi();
    retfi_ = retfi;
  } else {
    clear_has_retfi();
    retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerFourIntChar.retfi)
}

// -------------------------------------------------------------------

// ServerThreeIntTwoChar

// required int64 code = 1;
inline bool ServerThreeIntTwoChar::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerThreeIntTwoChar::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerThreeIntTwoChar::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerThreeIntTwoChar::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
  clear_has_code();
}
inline ::google::protobuf::int64 ServerThreeIntTwoChar::code() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntTwoChar.code)
  return code_;
}
inline void ServerThreeIntTwoChar::set_code(::google::protobuf::int64 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntTwoChar.code)
}

// optional int64 rets = 2;
inline bool ServerThreeIntTwoChar::has_rets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerThreeIntTwoChar::set_has_rets() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerThreeIntTwoChar::clear_has_rets() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerThreeIntTwoChar::clear_rets() {
  rets_ = GOOGLE_LONGLONG(0);
  clear_has_rets();
}
inline ::google::protobuf::int64 ServerThreeIntTwoChar::rets() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntTwoChar.rets)
  return rets_;
}
inline void ServerThreeIntTwoChar::set_rets(::google::protobuf::int64 value) {
  set_has_rets();
  rets_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntTwoChar.rets)
}

// optional int64 rett = 3;
inline bool ServerThreeIntTwoChar::has_rett() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServerThreeIntTwoChar::set_has_rett() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServerThreeIntTwoChar::clear_has_rett() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServerThreeIntTwoChar::clear_rett() {
  rett_ = GOOGLE_LONGLONG(0);
  clear_has_rett();
}
inline ::google::protobuf::int64 ServerThreeIntTwoChar::rett() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntTwoChar.rett)
  return rett_;
}
inline void ServerThreeIntTwoChar::set_rett(::google::protobuf::int64 value) {
  set_has_rett();
  rett_ = value;
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntTwoChar.rett)
}

// optional string retf = 4;
inline bool ServerThreeIntTwoChar::has_retf() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServerThreeIntTwoChar::set_has_retf() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServerThreeIntTwoChar::clear_has_retf() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServerThreeIntTwoChar::clear_retf() {
  if (retf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retf_->clear();
  }
  clear_has_retf();
}
inline const ::std::string& ServerThreeIntTwoChar::retf() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntTwoChar.retf)
  return *retf_;
}
inline void ServerThreeIntTwoChar::set_retf(const ::std::string& value) {
  set_has_retf();
  if (retf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retf_ = new ::std::string;
  }
  retf_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntTwoChar.retf)
}
inline void ServerThreeIntTwoChar::set_retf(const char* value) {
  set_has_retf();
  if (retf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retf_ = new ::std::string;
  }
  retf_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerThreeIntTwoChar.retf)
}
inline void ServerThreeIntTwoChar::set_retf(const char* value, size_t size) {
  set_has_retf();
  if (retf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retf_ = new ::std::string;
  }
  retf_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerThreeIntTwoChar.retf)
}
inline ::std::string* ServerThreeIntTwoChar::mutable_retf() {
  set_has_retf();
  if (retf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retf_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerThreeIntTwoChar.retf)
  return retf_;
}
inline ::std::string* ServerThreeIntTwoChar::release_retf() {
  clear_has_retf();
  if (retf_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retf_;
    retf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerThreeIntTwoChar::set_allocated_retf(::std::string* retf) {
  if (retf_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retf_;
  }
  if (retf) {
    set_has_retf();
    retf_ = retf;
  } else {
    clear_has_retf();
    retf_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerThreeIntTwoChar.retf)
}

// optional string retfi = 5;
inline bool ServerThreeIntTwoChar::has_retfi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServerThreeIntTwoChar::set_has_retfi() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServerThreeIntTwoChar::clear_has_retfi() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServerThreeIntTwoChar::clear_retfi() {
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_->clear();
  }
  clear_has_retfi();
}
inline const ::std::string& ServerThreeIntTwoChar::retfi() const {
  // @@protoc_insertion_point(field_get:ServerReturn.ServerThreeIntTwoChar.retfi)
  return *retfi_;
}
inline void ServerThreeIntTwoChar::set_retfi(const ::std::string& value) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(value);
  // @@protoc_insertion_point(field_set:ServerReturn.ServerThreeIntTwoChar.retfi)
}
inline void ServerThreeIntTwoChar::set_retfi(const char* value) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerReturn.ServerThreeIntTwoChar.retfi)
}
inline void ServerThreeIntTwoChar::set_retfi(const char* value, size_t size) {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  retfi_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerReturn.ServerThreeIntTwoChar.retfi)
}
inline ::std::string* ServerThreeIntTwoChar::mutable_retfi() {
  set_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retfi_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ServerReturn.ServerThreeIntTwoChar.retfi)
  return retfi_;
}
inline ::std::string* ServerThreeIntTwoChar::release_retfi() {
  clear_has_retfi();
  if (retfi_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retfi_;
    retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ServerThreeIntTwoChar::set_allocated_retfi(::std::string* retfi) {
  if (retfi_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retfi_;
  }
  if (retfi) {
    set_has_retfi();
    retfi_ = retfi;
  } else {
    clear_has_retfi();
    retfi_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ServerReturn.ServerThreeIntTwoChar.retfi)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerReturn

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerReturnIntChar_2eproto__INCLUDED
